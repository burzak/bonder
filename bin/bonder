#!/usr/bin/env php
<?php

foreach (array(__DIR__ . '/../../autoload.php', __DIR__ . '/../vendor/autoload.php', __DIR__ . '/vendor/autoload.php') as $file) {
  if (file_exists($file)) {
    define('BONDER_COMPOSER_AUTOLOAD', $file);
    break;
  }
}

unset($file);

if (!defined('BONDER_COMPOSER_AUTOLOAD')) {
  echo 'You need to set up the project dependencies using the following commands:' . PHP_EOL .
      'wget http://getcomposer.org/composer.phar' . PHP_EOL .
      'php composer.phar install' . PHP_EOL;
  die(1);
}

require BONDER_COMPOSER_AUTOLOAD;

function show_global_help() {
  echo "
  bonder create       # Creates the bonder project files, if they don't exist
  bonder force-create # Creates and overwrites bonder project files to their default versions

  ";
  die;
}

function create($override) {
  @mkdir("bonder_public");
  @mkdir("bonder_private");
  if (!file_exists("bonder_public/launcher.php") || $override) {
    file_put_contents("bonder_public/launcher.php", "<?php
      // Auto generated by bin/bonder
      include __DIR__ . '/../vendor/autoload.php';
      include __DIR__ . '/../bonder_private/session_start.php';

      \$launcher = \\Bonder\\LauncherFactory::getStandardHttp(
        include __DIR__ . '/../bonder_private/resources.php',
        include __DIR__ . '/../bonder_private/controllers.php',
        include __DIR__ . '/../bonder_private/filters.php')->launch();
    ");
  }
  if (!file_exists("bonder_private/session_start.php") || $override) {
    file_put_contents("bonder_private/session_start.php", "<?php
    session_start();
    ");
  }
  $files = array('resources.php', 'controllers.php', 'filters.php');
  foreach ($files as $file) {
    if (!file_exists("bonder_private/$file") || $override) {
      file_put_contents("bonder_private/$file", "<?php
        return array();
      ");
    }
  }
}

if (count($argv) <= 1) {
  show_global_help();
}
$command = $argv[1];
switch ($command) {
  case "create":
    create(false);
    break;
  case "force-create":
    create(true);
    break;
  default;
    show_global_help();
}
